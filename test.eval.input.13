(eq? #t #t)
(eq? (null? (quote ())) #t)
(eq? (null? (quote (a))) #f)
(eq? (cdr (quote (a))) (quote ()))
(eq? car car)
(eq? car cdr)
(let ((f (lambda (x) x)))
(let ((g (lambda (y) y*y)))
(eq? f g)))
(let ((f (lambda (x) x)))
(eq? f f))
(let ((f (quote (a))))
(let ((g (quote (a))))
(eq? f g)))
(eq? (quote (a)) (quote (b)))
(pair? (cons (quote a) (quote b)))
(pair? (quote (a b c)))
(pair? (quote ()))
(pair? (quote (a b)))
(pair? 3)
(let ((z 1))
   (let ((x 2))
	(<= x z)))
(<= 2.0 1.0)
(<= 1.0 1.0)
(<= 2.0 1)
(<= 3 1.0)
(/ 1 2)
(/ 4 2.0)
(/ 4 2)
(/ 5 2)
(/ 4.3 2)
(/ 5 2.2)
(/ 0 3)
(* 2 3 4)
(* 1 2 3 4 5 )
(* 1 2.0)
(* 2.0 2)
(* 3.0 4.0)
(* 0 3)
(* -3 -3)
(* 3 -3)
(- 3 4)
(- 3 4.0)
(- 2 0)